# Auto-generated by EclipseNSIS Script Wizard
# Nov 10, 2006 5:31:20 PM
#
# Note all the service handling code is taken directly from the Tomcat 6
# installer.
  
Name LittleShoot

# Defines
# NOTE: The VERSION is defined on the command line with makensis
# and also under "Defined Symbols" in the EclipseNSIS preferences
# The classpath and the JVM arguments are also defined from the command line.
!define REGKEY "SOFTWARE\$(^Name)"
!define COMPANY "LittleShoot Labs"
!define URL http://www.littleshoot.org
!define JRE_VERSION "1.6"

# This is taken from the button link on the getjava site at 
# http://www.java.com/en/download/windows_manual.jsp
#!define JRE_URL "http://javadl.sun.com/webapps/download/AutoDL?BundleId=12797"

# The following is what Chrome uses.  Not sure how the heck to get the most recent one.
#!define JRE_URL "http://javadl.sun.com/webapps/download/GetFile/1.6.0_10-b33/windows-i586/jre-6u10-windows-i586-p-iftw.exe"
#!define JRE_URL "http://javadl.sun.com/webapps/download/GetFile/1.6.0_12-b04/windows-i586/jre-6u12-windows-i586-p-iftw.exe"
!define JRE_URL "http://javadl.sun.com/webapps/download/AutoDL?BundleId=42746"
!define TEMP_INSTALL_DIR ../../../../temp_install_dir

# MUI defines
!define MUI_ICON images\48.ico
#!define MUI_FINISHPAGE_NOAUTOCLOSE
#!define MUI_FINISHPAGE_RUN $INSTDIR\LittleShoot.exe

!define MUI_UNICON images\48.ico

# Included files
!include WinMessages.nsh
!include Sections.nsh
!include MUI.nsh
!include nsProcess.nsh
#!include StrRep.nsh
#!include ReplaceInFile.nsh


# Reserved Files

# Variables
Var "JavaHome"
Var StartMenuGroup

# Installer pages
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_INSTFILES
Page custom CheckUserType

#!define MUI_PAGE_CUSTOMFUNCTION_SHOW launchApp
#!define MUI_PAGE_CUSTOMFUNCTION_LEAVE runningMessage
!define MUI_PAGE_CUSTOMFUNCTION_SHOW launchApp
!define MUI_PAGE_CUSTOMFUNCTION_LEAVE browserMessage
!insertmacro MUI_PAGE_FINISH


# Uninstall Pages
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

# Installer languages
!insertmacro MUI_LANGUAGE English

# Installer attributes
OutFile LittleShootPlugin.exe
RequestExecutionLevel admin
InstallDir $PROGRAMFILES\LittleShoot-"${VERSION}"
CRCCheck on
XPStyle on
ShowInstDetails show
VIProductVersion 0.1.0.0
VIAddVersionKey ProductName LittleShoot
VIAddVersionKey ProductVersion "${VERSION}"
VIAddVersionKey CompanyName "${COMPANY}"
VIAddVersionKey CompanyWebsite "${URL}"
VIAddVersionKey FileVersion ""
VIAddVersionKey FileDescription ""
VIAddVersionKey LegalCopyright ""
InstallDirRegKey HKLM "${REGKEY}" Path
ShowUninstDetails show

!macro reportError errorMessage
    nsisdl::download /TIMEOUT=30000 "http://littleshootbugs.appspot.com/submitWinInstallerBug?message=${errorMessage}&version="${VERSION}" "$TEMP\bugResults"
    # We just try to report the error and don't deal with errors reporting the error =).
    MessageBox MB_OK|MB_ICONSTOP "We're sorry, but there was an error installing LittleShoot, described only as '${errorMessage}'. Please try the installer again or contact LittleShoot at support@littleshoot.org."
!macroend

# Installer sections
Section -Main SEC0000
    
    Call DetectJRE
    SetOverwrite on
    
    #CreateDirectory $APPDATA\LittleShoot
    CreateDirectory $INSTDIR\output
    #CreateDirectory $INSTDIR\src\main\webapp\WEB-INF
    
    
    SetOutPath $INSTDIR\images
    File ${TEMP_INSTALL_DIR}\trunk\install\win\images\*
    #SetOutPath $INSTDIR\src\main\webapp
    #File ${TEMP_INSTALL_DIR}\trunk\install\win\src\main\webapp\*
    #SetOutPath $INSTDIR\src\main\webapp\WEB-INF
    #File ${TEMP_INSTALL_DIR}\trunk\install\win\src\main\webapp\WEB-INF\*
    
    SetOutPath $INSTDIR
    #File ${TEMP_INSTALL_DIR}\trunk\install\win\*.pack
    File ${TEMP_INSTALL_DIR}\trunk\install\win\*.jar
    File ${TEMP_INSTALL_DIR}\trunk\install\win\*.dll
    File ${TEMP_INSTALL_DIR}\trunk\install\win\*.png
    File ${TEMP_INSTALL_DIR}\trunk\install\win\LittleShoot.exe
    #File ${TEMP_INSTALL_DIR}\trunk\install\win\littleShoot.keystore
    #File ${TEMP_INSTALL_DIR}\trunk\install\win\log4j.properties
    
    #!insertmacro ReplaceInFile "$INSTDIR\log4j.properties" log.txt "$APPDATA/LittleShoot/java_log.txt"
    
    # SetOverwrite is documented to apply to the File command, not CreateShortCut
    # or others. See: http://www.nullsoft.com/free/nsis/makensis.htm
    CreateDirectory $PROGRAMFILES\LittleShoot
    Delete $PROGRAMFILES\LittleShoot\LittleShoot.lnk
    CreateShortCut "$PROGRAMFILES\LittleShoot\LittleShoot.lnk" \
        "$INSTDIR\LittleShoot.exe"
    
    # Now write the Internet Shortcut file.  Note this will only set the 
    # variable for the current user.
    WriteINIStr "$DESKTOP\LittleShoot.url" "InternetShortcut" "URL" "http://www.littleshoot.org/shortcut?fromWinDesktop=true&version=${VERSION}"
    WriteINIStr "$DESKTOP\LittleShoot.url" "InternetShortcut" "IconFile" "$INSTDIR\images\48.ico"
    WriteINIStr "$DESKTOP\LittleShoot.url" "InternetShortcut" "HotKey" "0"
    WriteINIStr "$DESKTOP\LittleShoot.url" "InternetShortcut" "IconIndex" "0"
    
    
    WriteRegStr HKLM "${REGKEY}\Components" Main 1
    
    #RegDLL $INSTDIR\axlittleshoot.dll

    # We should probably just call "ExecWait" passing it a bat file here. These ExecDos calls do some weird stuff.


    Call configureFirewall

    Pop $0
    IfErrors 0 NoError
        !insertmacro reportError "netsherror$0"
    NoError:
    
    Call findJavaPath
    Pop $2

    IfSilent +2 0
    !insertmacro MUI_INSTALLOPTIONS_READ $2 "jvm.ini" "Field 2" "State"

    StrCpy "$JavaHome" $2
    Call findJVMPath
    Pop $2

    DetailPrint "Using Jvm: $2"
    
    #SetOutPath $TEMP
    #File ${TEMP_INSTALL_DIR}\trunk\install\win\noConsole.exe 
    #File ${TEMP_INSTALL_DIR}\trunk\install\win\unpack200.exe
    
    #Call unpackJars
  
SectionEnd

Section -post SEC0001

    #DetailPrint "Updating LittleShoot Service..."
    #DetailPrint "Using classpath: ${CLASSPATH}" 
    #DetailPrint "Using main class: ${MAIN_CLASS}"
    #nsExec::ExecToLog '"$INSTDIR\LittleShoot.exe" //US//LittleShoot --Classpath "${CLASSPATH}"'
    #nsExec::ExecToLog '"$INSTDIR\LittleShoot.exe" //US//LittleShoot --StartClass ${MAIN_CLASS} --StopClass ${MAIN_CLASS} --StartParams start --StopParams stop  --StartMode jvm --StopMode jvm'
    #nsExec::ExecToLog '"$INSTDIR\LittleShoot.exe" //US//LittleShoot --JvmOptions "-Dorg.lastbamboo.client.version=${VERSION}#-Dorg.mortbay.xml.XmlParser.NotValidating=true#-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger" --StdOutput auto --StdError auto --LogLevel debug'
    #nsExec::ExecToLog '"$INSTDIR\LittleShoot.exe" //US//LittleShoot --Startup auto'
    
    ClearErrors
    
    WriteRegStr HKLM "${REGKEY}" Path $INSTDIR
    WriteUninstaller $INSTDIR\uninstall.exe
    #WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Run" "$(^Name)" '"$INSTDIR\LittleShoot.exe"'
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" DisplayName "$(^Name)"
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" DisplayVersion "${VERSION}"
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" Publisher "${COMPANY}"
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" URLInfoAbout "${URL}"
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" DisplayIcon $INSTDIR\uninstall.exe
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" UninstallString $INSTDIR\uninstall.exe
    WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" NoModify 1
    WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" NoRepair 1
    
    
    #WriteRegStr HKLM "Software\MozillaPlugins\@littleshoot.org/LittleShoot,version='${VERSION}'" Path '"$INSTDIR\LittleShootPlugin.dll"'

    WriteRegStr HKLM "SOFTWARE\MozillaPlugins\@littleshoot.org/LittleShoot" "Path" "$INSTDIR\nplittleshoot.dll"
    #WriteRegStr HKLM "SOFTWARE\MozillaPlugins\@littleshoot.org/LittleShootPlugin" "XPTPath" "$SYSDIR\LittleShoot\nplittleshoot.xpt"
    WriteRegStr HKLM "SOFTWARE\MozillaPlugins\@littleshoot.org/LittleShoot" "ProductName" "LittleShoot P2P Plugin"
    WriteRegStr HKLM "SOFTWARE\MozillaPlugins\@littleshoot.org/LittleShoot" "Vendor" "${COMPANY}"
    WriteRegStr HKLM "SOFTWARE\MozillaPlugins\@littleshoot.org/LittleShoot" "Description" "LittleShoot P2P Plugin"
    WriteRegStr HKLM "SOFTWARE\MozillaPlugins\@littleshoot.org/LittleShoot" "Version" "${VERSION}"
    
    WriteRegStr HKCR "MIME\Database\Content Type\application/x-bittorrent" "CLSID" "{0CC00AEB-7E95-4a80-8C29-ED90939FC99F}"
    WriteRegStr HKCR "MIME\Database\Content Type\application/x-littleshoot" "CLSID" "{0CC00AEB-7E95-4a80-8C29-ED90939FC99F}"
    
    #WriteRegStr HKCR ".torrent" "" "LittleShoot.PluginHostCtrl.1"
    #WriteRegStr HKCR "Content Type" "application/x-bittorrent"
    
    WriteRegDWORD HKLM "SOFTWARE\Microsoft\Internet Explorer\ActiveX Compatibility\{0CC00AEB-7E95-4a80-8C29-ED90939FC99F}" "Compatibility Flags" 0x00000000
    
    # It's weird we have to explicitly add the values here -- we really just want to create the key with the default values.
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Ext\PreApproved\{0CC00AEB-7E95-4a80-8C29-ED90939FC99F}" "" ""
    
    # Make LittleShoot the default torrent handler for .torrent files.
    WriteRegStr HKCU "SOFTWARE\Classes\.torrent" "" "LittleShoot" 
    WriteRegStr HKCU "SOFTWARE\Classes\LittleShoot\Content Type" "" "application/x-bittorrent"
    # The DefaultIcon doesn't seem to work, at least in Windows Explorer. Windows Explorer just displays the default icon for the exe itself.
    #WriteRegStr HKCU "SOFTWARE\Classes\LittleShoot\DefaultIcon" "" '"C:\Program Files\LittleShoot-0.994\images\16.ico"'
    WriteRegStr HKCU "SOFTWARE\Classes\LittleShoot\shell\open\command" "" '"$INSTDIR\LittleShoot.exe" "%1"'

SectionEnd

# Macro for selecting uninstaller sections
!macro SELECT_UNSECTION SECTION_NAME UNSECTION_ID
    Push $R0
    ReadRegStr $R0 HKLM "${REGKEY}\Components" "${SECTION_NAME}"
    StrCmp $R0 1 0 next${UNSECTION_ID}
    !insertmacro SelectSection "${UNSECTION_ID}"
    GoTo done${UNSECTION_ID}
next${UNSECTION_ID}:
    !insertmacro UnselectSection "${UNSECTION_ID}"
done${UNSECTION_ID}:
    Pop $R0
!macroend

# Uninstaller sections
Section /o un.Main UNSEC0000

    ; The following would be sweet, but apparently a bunch of tools identify
    ; it as spyware??
    ; MessageBox MB_OK|MB_ICONEXCLAMATION "Attempting to uninstall!!"
    DetailPrint "Starting uninstall..."
    ${nsProcess::KillProcess} "LittleShoot.exe" $R0
    ${nsProcess::Unload}
    
    ClearErrors
    
    DetailPrint "Starting main uninstall section...."
    Delete /REBOOTOK $INSTDIR\LittleShoot.exe
    Delete /REBOOTOK $INSTDIR\nplittleshoot.dll
    Delete /REBOOTOK $DESKTOP\LittleShoot.url
    #Delete /REBOOTOK $INSTDIR\LittleShootw.exe
    Delete /REBOOTOK $INSTDIR\log4j.properties
    #Delete /REBOOTOK $INSTDIR\littleShoot.keystore
    #Delete /REBOOTOK $INSTDIR\lastbamboo-client-site.war
    Delete /REBOOTOK $INSTDIR\lib\*
    Delete /REBOOTOK $INSTDIR\images\*
    Delete /REBOOTOK $INSTDIR\output\*
    #Delete /REBOOTOK $INSTDIR\src\main\webapp\WEB-INF\*
    #Delete /REBOOTOK $INSTDIR\src\main\webapp\*
    Delete /REBOOTOK $PROGRAMFILES\LittleShoot\*
    Delete /REBOOTOK $APPDATA\LittleShoot\*
    
    RmDir /REBOOTOK $INSTDIR\lib
    RmDir /REBOOTOK $INSTDIR\images
    RmDir /REBOOTOK $INSTDIR\output
    #RmDir /REBOOTOK $INSTDIR\src\main\webapp\WEB-INF
    #RmDir /REBOOTOK $INSTDIR\src\main\webapp
    #RmDir /REBOOTOK $INSTDIR\src\main
    #RmDir /REBOOTOK $INSTDIR\src
    RmDir /REBOOTOK $PROGRAMFILES\LittleShoot
    RmDir /REBOOTOK $APPDATA\LittleShoot

    Delete /REBOOTOK $INSTDIR\*
    RmDir /REBOOTOK $INSTDIR
    
    Delete /REBOOTOK $APPDATA\LittleShoot\*
    RmDir /REBOOTOK $APPDATA\LittleShoot
    
    Delete /REBOOTOK $PROFILE\.littleshoot\*
    RmDir /REBOOTOK $PROFILE\.littleshoot
    
    #UnRegDLL $WINDIR\axlittleshoot.dll
    #Delete /REBOOTOK $WINDIR\axlittleshoot.dll
    
    UnRegDLL $SYSDIR\axlittleshoot.dll
    Delete /REBOOTOK $SYSDIR\axlittleshoot.dll
    
    Call un.deleteFirewallSettings
    #ExecDos::exec 'netsh firewall delete allowedprogram program="$INSTDIR\LittleShoot.exe" profile="ALL"'
    
    # This one deletes the current profile.
    #ExecDos::exec 'netsh firewall delete allowedprogram program="$INSTDIR\LittleShoot.exe"'
    
    DeleteRegValue HKLM "${REGKEY}\Components" Main
    DetailPrint "Completed main uninstall..."

SectionEnd

Section un.post UNSEC0001
    DeleteRegKey HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Run\$(^Name)"
    DeleteRegKey HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)"
    Delete /REBOOTOK "$SMPROGRAMS\$StartMenuGroup\Uninstall $(^Name).lnk"
    Delete /REBOOTOK $INSTDIR\uninstall.exe
    DeleteRegValue HKLM "${REGKEY}" StartMenuGroup
    DeleteRegValue HKLM "${REGKEY}" Path
    DeleteRegKey /IfEmpty HKLM "${REGKEY}\Components"
    DeleteRegKey /IfEmpty HKLM "${REGKEY}"
    RmDir /REBOOTOK $SMPROGRAMS\$StartMenuGroup
    RmDir /REBOOTOK $INSTDIR
    
    DeleteRegKey HKLM "SOFTWARE\MozillaPlugins\@littleshoot.org/LittleShoot"
    DeleteRegValue HKCR "MIME\Database\Content Type\application/x-bittorrent" "CLSID" 
    DeleteRegKey HKCR "MIME\Database\Content Type\application/x-littleshoot"  
    
    DeleteRegValue HKCU "SOFTWARE\Classes\.torrent" "LittleShoot" 
    
    # This deletes all the sub-keys as well.
    DeleteRegKey HKCU "SOFTWARE\Classes\LittleShoot"
    
SectionEnd

# Installer functions
Function .onInit
 
    ; Uninstall the old version if it's there.  This will typically mark most
    ; files for deletion upon reboot because they're typically in use.
    ReadRegStr $R0 HKLM \
      "Software\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" \
      "UninstallString"
    
    DetailPrint "Initing installer with old version at: $R0"
    ;MessageBox MB_OK "Initing installer with old version at: $R0"
    
    ; Jump to done if it's not there.
    StrCmp $R0 "" done

      ;ClearErrors
      ; Note we pass the /S param to make the uninstall silent.
      ;ExecWait '$R0 _?=$INSTDIR /S' ;Do not copy the uninstaller to a temp file
      ExecWait '$R0 /S' ;Do not copy the uninstaller to a temp file
      ;Exec '$INSTDIR\uninstall.exe /S'
    
      ;IfErrors no_remove_uninstaller
        ;You can either use Delete /REBOOTOK in the uninstaller or add some code
        ;here to remove the uninstaller. Use a registry key to check
        ;whether the user has chosen to uninstall. If you are using an uninstaller
        ;components page, make sure all sections are uninstalled.
      ;no_remove_uninstaller:
      
    done:
     
    InitPluginsDir
    StrCpy $StartMenuGroup LittleShoot
FunctionEnd

# Uninstaller functions
Function un.onInit
    ; Comment out the following line to see the detailed uninstall information
    ; without the window closing before you can read it.
    SetAutoClose true
    ReadRegStr $INSTDIR HKLM "${REGKEY}" Path
    ReadRegStr $StartMenuGroup HKLM "${REGKEY}" StartMenuGroup
    
    !insertmacro SELECT_UNSECTION Main ${UNSEC0000}
FunctionEnd

Function un.onUninstFailed
    MessageBox MB_OK "We're sorry, but there was an error uninstalling $(^Name)."
FunctionEnd

Function GetJRE
    MessageBox MB_OK "$(^Name) requires Java 1.5 or above.  Please be \
        patient while $(^Name) automatically downloads and installs it.  "
 
    StrCpy $2 "$TEMP\Java Runtime Environment.exe"
    nsisdl::download /TIMEOUT=30000 ${JRE_URL} $2
    Pop $R0 ;Get the return value
    StrCmp $R0 "success" +3
    MessageBox MB_OK "We're sorry, but the doownload failed due to the \
        following error: $R0.  You can try running this installer again, or \
        you could try installing Java manually from http://www.java.com"
    Quit
    ExecWait $2
    Delete $2
FunctionEnd
 
 
Function DetectJRE
  ReadRegStr $2 HKLM "SOFTWARE\JavaSoft\Java Runtime Environment" \
             "CurrentVersion"
  StrCmp $2 ${JRE_VERSION} done
  StrCmp $2 "1.6" done
  StrCmp $2 "1.7" done
  StrCmp $2 "1.8" done
  StrCmp $2 "1.9" done
  
  Call GetJRE
  
  done:
FunctionEnd

; =====================
; CheckUserType Function
; =====================
;
; Check the user type, and warn if it's not an administrator.
; Taken from Tomcat, which was taken from Examples/UserInfo that ships with NSIS.
Function CheckUserType
  ClearErrors
  UserInfo::GetName
  IfErrors Win9x
  Pop $0
  UserInfo::GetAccountType
  Pop $1
  StrCmp $1 "Admin" 0 +3
    ; This is OK, do nothing
    Goto done

    MessageBox MB_OK|MB_ICONEXCLAMATION "We're sorry, but you must have \
        administrator privileges to install LittleShoot. \
        Please log on as a user with administrator privileges."
    Goto done

  Win9x:
    # This one means you don't need to care about admin or
    # not admin because Windows 9x doesn't either
    MessageBox MB_OK "Error! We're sorry, but LittleShoot can't run under Windows 9x!"

  done:
FunctionEnd

; =====================
; FindJavaPath Function
; =====================
;
; Find the JAVA_HOME used on the system, and put the result on the top of the
; stack
; Will return an empty string if the path cannot be determined
;
Function findJavaPath

  ;ClearErrors

  ;ReadEnvStr $1 JAVA_HOME

  ;IfErrors 0 FoundJDK

  ClearErrors

  ReadRegStr $2 HKLM "SOFTWARE\JavaSoft\Java Runtime Environment" "CurrentVersion"
  ReadRegStr $1 HKLM "SOFTWARE\JavaSoft\Java Runtime Environment\$2" "JavaHome"
  ReadRegStr $3 HKLM "SOFTWARE\JavaSoft\Java Runtime Environment\$2" "RuntimeLib"

  ;FoundJDK:

  IfErrors 0 NoErrors
  StrCpy $1 ""

NoErrors:

  ClearErrors

  ; Put the result in the stack
  Push $1

FunctionEnd


; ====================
; FindJVMPath Function
; ====================
;
; Find the full JVM path, and put the result on top of the stack
; Argument: JVM base path (result of findJavaPath)
; Will return an empty string if the path cannot be determined
;
Function findJVMPath

  ClearErrors
  
  ;Step one: Is this a JRE path (Program Files\Java\XXX)
  StrCpy $1 "$JavaHome"
  
  StrCpy $2 "$1\bin\hotspot\jvm.dll"
  IfFileExists "$2" FoundJvmDll
  StrCpy $2 "$1\bin\server\jvm.dll"
  IfFileExists "$2" FoundJvmDll
  StrCpy $2 "$1\bin\client\jvm.dll"  
  IfFileExists "$2" FoundJvmDll
  StrCpy $2 "$1\bin\classic\jvm.dll"
  IfFileExists "$2" FoundJvmDll

  ;Step two: Is this a JDK path (Program Files\XXX\jre)
  StrCpy $1 "$JavaHome\jre"
  
  StrCpy $2 "$1\bin\hotspot\jvm.dll"
  IfFileExists "$2" FoundJvmDll
  StrCpy $2 "$1\bin\server\jvm.dll"
  IfFileExists "$2" FoundJvmDll
  StrCpy $2 "$1\bin\client\jvm.dll"  
  IfFileExists "$2" FoundJvmDll
  StrCpy $2 "$1\bin\classic\jvm.dll"
  IfFileExists "$2" FoundJvmDll

  ClearErrors
  ;Step tree: Read defaults from registry
  
  ReadRegStr $1 HKLM "SOFTWARE\JavaSoft\Java Runtime Environment" "CurrentVersion"
  ReadRegStr $2 HKLM "SOFTWARE\JavaSoft\Java Runtime Environment\$1" "RuntimeLib"
  
  IfErrors 0 FoundJvmDll
  StrCpy $2 ""

  FoundJvmDll:
  ClearErrors

  ; Put the result in the stack
  Push $2

FunctionEnd

Function unpackJars
    FindFirst $0 $1 $INSTDIR\*.pack
    Var /GLOBAL baseJarName
    ClearErrors
    loop:
      StrCmp $1 "" done
      StrCpy $baseJarName $1 -5 
      DetailPrint "Unpacking $1 to $baseJarName"
      ExecWait '"$TEMP\noConsole.exe" "$TEMP\unpack200.exe" -vr "$INSTDIR\$1" "$INSTDIR\$baseJarName"' $3
      IfErrors 0 NoError
        !insertmacro reportError "unpackerror$3"
        Abort
      NoError:
        FindNext $0 $1
        Goto loop
    done:
Functionend



Function launchApp
    ; Start the program, passing the installer flag.
    #ExecWait '"$INSTDIR\LittleShoot.exe" installer' 
    Exec '"$INSTDIR\LittleShoot.exe" installer'
Functionend

Function browserMessage
    messagebox mb_ok|mb_iconinformation "Thank you for installing LittleShoot. We'll now return you to the LittleShoot home page."
    ExecShell "open" "http://www.littleshoot.org/welcome?fromWinInstaller=true"
Functionend

Function configureFirewall
 
  Push $R0
  Push $R1
 
  ClearErrors
 
  ReadRegStr $R0 HKLM "SOFTWARE\Microsoft\Windows NT\CurrentVersion" CurrentVersion
 
  StrCpy $R1 $R0 1
 
  StrCmp $R1 '3' lbl_winnt_x
  StrCmp $R1 '4' lbl_winnt_x
 
  StrCpy $R1 $R0 3
 
  StrCmp $R1 '5.0' lbl_winnt_2000
  StrCmp $R1 '5.1' lbl_winnt_XP
  StrCmp $R1 '5.2' lbl_winnt_2003
  StrCmp $R1 '6.0' lbl_winnt_vista
  StrCmp $R1 '6.1' lbl_winnt_7 lbl_error
 
  lbl_winnt_x:
    StrCpy $R0 "NT $R0" 6
    Goto lbl_done
 
  lbl_winnt_2000:
    Strcpy $R0 '2000'
    Goto lbl_netsh
 
  lbl_winnt_XP:
    Strcpy $R0 'XP'
    Goto lbl_netsh
 
  lbl_winnt_2003:
    Strcpy $R0 '2003'
    Goto lbl_netsh
 
  lbl_winnt_vista:
    Strcpy $R0 'Vista'
    Goto lbl_netshAdvanced
 
  lbl_winnt_7:
    Strcpy $R0 '7'
    Goto lbl_netshAdvanced
 
  lbl_netsh:
    DetailPrint "Using old netsh format"
    nsExec::Exec 'netsh firewall add allowedprogram "$INSTDIR\LittleShoot.exe" "LittleShoot-${VERSION}" ENABLE'
    Goto lbl_done

  lbl_netshAdvanced:
    DetailPrint "Using new netsh format"
    nsExec::Exec 'netsh advfirewall firewall add rule name="LittleShoot-${VERSION}" dir=in action=allow program="$INSTDIR\LittleShoot.exe" enable=yes profile=any'
    Goto lbl_done

  lbl_error:
    Strcpy $R0 ''
 
  lbl_done:
 
  Pop $R1
  Exch $R0
FunctionEnd

Function un.deleteFirewallSettings
 
  Push $R0
  Push $R1
 
  ClearErrors
 
  ReadRegStr $R0 HKLM "SOFTWARE\Microsoft\Windows NT\CurrentVersion" CurrentVersion
 
  StrCpy $R1 $R0 1
 
  StrCmp $R1 '3' lbl_winnt_x
  StrCmp $R1 '4' lbl_winnt_x
 
  StrCpy $R1 $R0 3
 
  StrCmp $R1 '5.0' lbl_winnt_2000
  StrCmp $R1 '5.1' lbl_winnt_XP
  StrCmp $R1 '5.2' lbl_winnt_2003
  StrCmp $R1 '6.0' lbl_winnt_vista
  StrCmp $R1 '6.1' lbl_winnt_7 lbl_error
 
  lbl_winnt_x:
    StrCpy $R0 "NT $R0" 6
    Goto lbl_done
 
  lbl_winnt_2000:
    Strcpy $R0 '2000'
    Goto lbl_netsh
 
  lbl_winnt_XP:
    Strcpy $R0 'XP'
    Goto lbl_netsh
 
  lbl_winnt_2003:
    Strcpy $R0 '2003'
    Goto lbl_netsh
 
  lbl_winnt_vista:
    Strcpy $R0 'Vista'
    Goto lbl_netshAdvanced
 
  lbl_winnt_7:
    Strcpy $R0 '7'
    Goto lbl_netshAdvanced
 
  lbl_netsh:
    DetailPrint "Removing using old netsh format"
    nsExec::Exec 'netsh firewall delete allowedprogram "$INSTDIR\LittleShoot.exe"'
    Goto lbl_done

  lbl_netshAdvanced:
    DetailPrint "Removing using old netsh format"
    nsExec::Exec 'netsh advfirewall firewall delete rule name="LittleShoot-${VERSION}" program="$INSTDIR\LittleShoot.exe"'
    Goto lbl_done

  lbl_error:
    Strcpy $R0 ''
 
  lbl_done:
 
  Pop $R1
  Exch $R0
FunctionEnd

